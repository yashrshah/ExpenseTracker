{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NexExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","defaultYear","onChange","event","onYearFiltered","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","expense","title","amount","ExpensesList","items","length","map","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","getMonth","ExpenseList","useState","filterdYear","setFilterdYear","filterdExpenses","filter","toString","ExpenseForm","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","prevState","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enterdExpenseData","random","onAddNewExpense","App","initialExpenses","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43b263d8.chunk.js","sourcesContent":["import \"./Card.css\";\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\nexport default Card;\r\n","import \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const yearFilterHandler = (event) => {\r\n    props.onYearFiltered(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.defaultYear} onChange={yearFilterHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", {\r\n    month: \"long\",\r\n  });\r\n  const day = props.date.toLocaleString(\"en-US\", {\r\n    month: \"2-digit\",\r\n  });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.expense.date}></ExpenseDate>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.expense.title}</h2>\r\n        <div className=\"expense-item__price\">${props.expense.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem key={expense.id} expense={expense} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMax = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMax}\r\n          label={dataPoint.label}\r\n        ></ChartBar>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints}></Chart>;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport { useState } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nconst ExpenseList = (props) => {\r\n  const [filterdYear, setFilterdYear] = useState(\"2020\");\r\n\r\n  const yearFilterdHandler = (filterdYear) => {\r\n    setFilterdYear(filterdYear);\r\n  };\r\n\r\n  const filterdExpenses = props.expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filterdYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <li>\r\n        <Card className=\"expenses\">\r\n          <ExpensesFilter\r\n            defaultYear={filterdYear}\r\n            onYearFiltered={yearFilterdHandler}\r\n          ></ExpensesFilter>\r\n          <ExpensesChart expenses={filterdExpenses}></ExpensesChart>\r\n          <ExpensesList items={filterdExpenses}></ExpensesList>\r\n        </Card>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [userInput, setUserInput] = useState({\r\n    enteredTitle: \"\",\r\n    enteredAmount: \"\",\r\n    enteredDate: \"\",\r\n  });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredTitle: event.target.value };\r\n    });\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredAmount: event.target.value };\r\n    });\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setUserInput((prevState) => {\r\n      return { ...prevState, enteredDate: event.target.value };\r\n    });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: userInput.enteredTitle,\r\n      amount: +userInput.enteredAmount,\r\n      date: new Date(userInput.enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setUserInput({ enteredTitle: \"\", enteredDate: \"\", enteredAmount: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={userInput.enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={userInput.enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={userInput.enteredDate}\r\n            onChange={dateChangeHandler}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"Submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const saveExpenseDataHandler = (enterdExpenseData) => {\r\n    const expenseData = {\r\n      ...enterdExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddNewExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const onStopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onCancel={onStopEditingHandler}\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n        ></ExpenseForm>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","import ExpenseList from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NexExpense\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const initialExpenses = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  const [expenses, setExpenses] = useState(initialExpenses);\n\n  const addNewExpenseHandler = (expenseData) => {\n    setExpenses((prevExpenses) => {\n      return [expenseData, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddNewExpense={addNewExpenseHandler}></NewExpense>\n      <ExpenseList expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}